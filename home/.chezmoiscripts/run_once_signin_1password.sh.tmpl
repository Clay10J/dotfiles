#!/usr/bin/env bash
set -euo pipefail

# This script ensures the user is signed into 1Password.
# It's a 'run_once' script because the 1Password daemon will keep the user
# logged in for subsequent shell sessions and `chezmoi apply` runs.

# —————— COLORS & LOGGING ——————
BLUE='\033[0;34m'
NC='\033[0m'
log_info() { echo -e "\n${BLUE}ℹ️  $1${NC}"; }

# —————— 1PASSWORD DETAILS (from chezmoi) ——————
OP_ACCOUNT_SHORTHAND="{{ .onepassword_account }}"
OP_ACCOUNT_EMAIL="{{ .email }}"

# —————— SCRIPT LOGIC ——————
main() {
    # Fail fast if the onepassword_account variable is not set.
    # This should be configured by the prompt in .chezmoi.toml.tmpl
    if [[ -z "$OP_ACCOUNT_SHORTHAND" ]]; then
        echo "Error: The 'onepassword_account' variable is not set."
        echo "Please re-run 'chezmoi init' or configure it in your chezmoi data."
        exit 1
    fi

    if ! command -v op >/dev/null 2>&1; then
        echo "1Password CLI ('op') not found. Please install it first."
        exit 1
    fi

    log_info "Checking 1Password authentication status..."

    # Check if we are already signed in
    if op account get --account "$OP_ACCOUNT_SHORTHAND" &>/dev/null && \
       op user get --me --account "$OP_ACCOUNT_SHORTHAND" &>/dev/null; then
        echo "Already signed in to 1Password account '$OP_ACCOUNT_SHORTHAND'."
        exit 0
    fi

    log_info "Not signed in to 1Password. Proceeding with authentication."
    
    # Ensure the account is added to the local config
    if ! op account list | grep -q "$OP_ACCOUNT_SHORTHAND"; then
        log_info "Adding 1Password account to local configuration..."
        op account add --address my.1password.com --email "$OP_ACCOUNT_EMAIL"
    fi

    # Sign in to the account
    log_info "Please sign in to your 1Password account: $OP_ACCOUNT_EMAIL"
    log_info "You may be prompted for your password and a two-factor authentication code."
    op signin --account "$OP_ACCOUNT_SHORTHAND"
    
    echo "Successfully signed in to 1Password."
}

main "$@" 